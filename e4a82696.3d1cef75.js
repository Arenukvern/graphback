(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{210:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(2),a=(t(0),t(230));const o={title:"Graphback CRUD Config",id:"config"},i={id:"version-0.10.x/config",isDocsHomePage:!1,title:"Graphback CRUD Config",description:"Graphback takes input model and generates CRUD operations as queries and mutations.",source:"@site/versioned_docs/version-0.10.x/config.md",permalink:"/docs/0.10.x/config",editUrl:"https://github.com/aerogear/graphback/edit/master/website/versioned_docs/version-0.10.x/config.md",version:"0.10.x",sidebar:"version-0.10.x/docs",previous:{title:"Defining your Data Model",permalink:"/docs/0.10.x/datamodel"},next:{title:"Introduction",permalink:"/docs/0.10.x/concepts"},latestVersionMainDocPermalink:"/docs/gettingstarted"},c=[{value:"Configuration",id:"configuration",children:[]},{value:"Changing configuration for the type",id:"changing-configuration-for-the-type",children:[]}],p={rightToc:c};function l({components:e,...n}){return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Graphback takes input model and generates CRUD operations as queries and mutations.\nThese include ",Object(a.b)("inlineCode",{parentName:"p"},"create"),", ",Object(a.b)("inlineCode",{parentName:"p"},"update"),", ",Object(a.b)("inlineCode",{parentName:"p"},"delete"),", ",Object(a.b)("inlineCode",{parentName:"p"},"find")," and ",Object(a.b)("inlineCode",{parentName:"p"},"findAll"),". These operations can be generated for each ",Object(a.b)("inlineCode",{parentName:"p"},"type")," in your model.\nFurther Graphback also generates three predefined subscriptions, namely ",Object(a.b)("inlineCode",{parentName:"p"},"new"),", ",Object(a.b)("inlineCode",{parentName:"p"},"updated")," and ",Object(a.b)("inlineCode",{parentName:"p"},"deleted"),".\nWe can use them in clients to receive live updates for every change that is happening on the server."),Object(a.b)("p",null," Graphback allows the user to customize the generation process by using ",Object(a.b)("inlineCode",{parentName:"p"},"configuration"),"."),Object(a.b)("h2",{id:"configuration"},"Configuration"),Object(a.b)("p",null,"Graphback uses flags to allow user to choose between the CRUD operations and subscriptions. These are present in ",Object(a.b)("inlineCode",{parentName:"p"},"graphback.json"),", created by ",Object(a.b)("inlineCode",{parentName:"p"},"config")," command or by graphql-cli,\nin the root of your project folder under the ",Object(a.b)("inlineCode",{parentName:"p"},"generation")," key. The default config is"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  ...,\n  "generation": {\n    "create": true,\n    "update": true,\n    "findAll": true,\n    "find": true,\n    "delete": false,\n    "subCreate": false,\n    "subUpdate": false,\n    "subDelete": false,\n    "disableGen": false,\n  }\n}\n')),Object(a.b)("p",null,"Changing these flags and performing ",Object(a.b)("inlineCode",{parentName:"p"},"generate"),", regenerates your ",Object(a.b)("inlineCode",{parentName:"p"},"schema")," and ",Object(a.b)("inlineCode",{parentName:"p"},"resolvers")," with provided config."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("strong",{parentName:"p"},"Note"),": For subscriptions, the user needs to change the value of the respective operations to ",Object(a.b)("inlineCode",{parentName:"p"},"true"),". For example, changing\n",Object(a.b)("inlineCode",{parentName:"p"},"subDelete")," to ",Object(a.b)("inlineCode",{parentName:"p"},"true")," won't work unless, ",Object(a.b)("inlineCode",{parentName:"p"},"delete")," is ",Object(a.b)("inlineCode",{parentName:"p"},"true"),".")),Object(a.b)("h2",{id:"changing-configuration-for-the-type"},"Changing configuration for the type"),Object(a.b)("p",null,"Generator config applies the config to all the types in your schema.\nGraphback allows you to change these for any single type using ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Akryum/graphql-metadata"}),Object(a.b)("inlineCode",{parentName:"a"},"graphql-metadata")),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'"""\n@crud.create: false\n"""\ntype User {\n  ....\n}\n')),Object(a.b)("p",null,"or"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'"""\n@crud.create\n"""\ntype User {\n  ....\n}\n')),Object(a.b)("h4",{id:"available-options"},"Available Options"),Object(a.b)("p",null,"All config options can be replicated by specifying the ",Object(a.b)("inlineCode",{parentName:"p"},"@crud.")," prefix"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"@crud.create: true\n@crud.update: true\n@crud.delete: true\n@crud.find: true\n@crud.findAll: true\n@crud.subCreate: true\n@crud.subUpdate: true\n@crud.subDelete: true\n@crud.disableGen: true\n")),Object(a.b)("p",null,"You can use these annotations to have more control over individual elements. For example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),'"""\n@crud.delete\n"""\ntype Note {\n  ...\n}\n')),Object(a.b)("p",null,"will create the ",Object(a.b)("inlineCode",{parentName:"p"},"delete")," mutation for ",Object(a.b)("inlineCode",{parentName:"p"},"Note")," type."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},Object(a.b)("strong",{parentName:"p"},"Note"),": Annotations override the configuration flags to ",Object(a.b)("inlineCode",{parentName:"p"},"true"))),Object(a.b)("h4",{id:"cruddisablegen"},Object(a.b)("inlineCode",{parentName:"h4"},"@crud.disableGen")),Object(a.b)("p",null,"User can use this directive to disable CRUD operation generation for that type. Applying this directive will not create any\n",Object(a.b)("inlineCode",{parentName:"p"},"Query"),"/",Object(a.b)("inlineCode",{parentName:"p"},"Mutation"),"/",Object(a.b)("inlineCode",{parentName:"p"},"Subscription")," for that type."))}l.isMDXComponent=!0},230:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),b=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=b(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=b(t),d=r,f=u["".concat(i,".").concat(d)]||u[d]||s[d]||o;return t?a.a.createElement(f,c(c({ref:n},l),{},{components:t})):a.a.createElement(f,c({ref:n},l))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);