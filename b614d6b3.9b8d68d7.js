/*! For license information please see b614d6b3.9b8d68d7.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{179:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var r=n(1),a=n(6),o=(n(222),n(221)),i={id:"datasync-soft-delete",title:"Soft Deletes with delta queries",sidebar_label:"Setting up Soft Deletion"},c={id:"datasync/datasync-soft-delete",title:"Soft Deletes with delta queries",description:"This is the simplest strategy for Data Synchronization that is also quite straightforward to set up.",source:"@site/../docs/datasync/datasync-soft-delete.md",permalink:"/docs/next/datasync/datasync-soft-delete",editUrl:"https://github.com/aerogear/graphback/edit/master/website/../docs/datasync/datasync-soft-delete.md",version:"next",sidebar_label:"Setting up Soft Deletion",sidebar:"docs",previous:{title:"Data Synchronization",permalink:"/docs/next/datasync/datasync-intro"},next:{title:"Releases",permalink:"/docs/next/releases"}},l=[{value:"Setup",id:"setup",children:[{value:"Annotate the required models",id:"annotate-the-required-models",children:[]},{value:"Modify the template to support Data Synchronization",id:"modify-the-template-to-support-data-synchronization",children:[]}]},{value:"Issuing Delta/Sync queries from client",id:"issuing-deltasync-queries-from-client",children:[]}],u={rightToc:l};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This is the simplest strategy for Data Synchronization that is also quite straightforward to set up."),Object(o.b)("h2",{id:"setup"},"Setup"),Object(o.b)("p",null,"Start off with the official Graphback template for MongoDB ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://GitHub.com/aerogear/graphback/tree/master/templates/ts-apollo-mongodb-backend"}),Object(o.b)("em",{parentName:"a"},"here"))," to follow along. Adding this strategy is relatively simple, consisting of the following two steps:"),Object(o.b)("h3",{id:"annotate-the-required-models"},"Annotate the required models"),Object(o.b)("p",null,"Add the ",Object(o.b)("inlineCode",{parentName:"p"},"versioned")," and ",Object(o.b)("inlineCode",{parentName:"p"},"delta")," annotations to your model(s) in your GraphQL SDL found in the ",Object(o.b)("inlineCode",{parentName:"p"},"model")," folder:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'""" \n@model\n@versioned\n@delta \n"""\ntype Comment {\n  id: ID!\n  text: String\n  description: String\n}\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"versioned")," annotation ensures consistency of your data and ",Object(o.b)("inlineCode",{parentName:"p"},"delta")," marker gives you delta queries. "),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE"),": While the ",Object(o.b)("inlineCode",{parentName:"p"},"versioned")," annotation can be used without the ",Object(o.b)("inlineCode",{parentName:"p"},"@graphback/datasync")," package, both ",Object(o.b)("inlineCode",{parentName:"p"},"versioned")," and ",Object(o.b)("inlineCode",{parentName:"p"},"delta")," are required for implementing data synchronization on a given type.")),Object(o.b)("p",null,"This transforms your schema to the following:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'""" \n@model\n@versioned\n@delta \n"""\ntype Comment {\n  id: ID!\n  text: String\n  description: String\n  createdAt: String\n  updatedAt: String\n}\n\n\ntype CommentDelta {\n  id: ID!\n  text: String\n  description: String\n  createdAt: String\n  updatedAt: String\n  _deleted: Boolean\n}\n\ntype CommentDeltaList {\n  items: [CommentDelta]!\n  lastSync: String\n}\n\ntype Query {\n  ...\n  syncComments(lastSync: String!, filter: CommentFilter): CommentDeltaList!\n}\n')),Object(o.b)("p",null," The ",Object(o.b)("inlineCode",{parentName:"p"},"@delta")," annotation adds a ",Object(o.b)("inlineCode",{parentName:"p"},"sync")," query or a delta query as shown above. This allows you to get all the changed(updates and deletes) documents in a collection since the ",Object(o.b)("inlineCode",{parentName:"p"},"lastSync")," timestamp. Internally this uses the ",Object(o.b)("inlineCode",{parentName:"p"},"updatedAt")," database field to check if any documents in the database have been modified, by comparing client provided ",Object(o.b)("inlineCode",{parentName:"p"},"lastSync")," timestamp value. The documents to be returned in a ",Object(o.b)("inlineCode",{parentName:"p"},"sync")," query may also be filtered, so you can, for example, only ",Object(o.b)("inlineCode",{parentName:"p"},"sync")," comments on a specific post."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"@delta")," annotation also adds a ",Object(o.b)("inlineCode",{parentName:"p"},"_deleted")," field to the ",Object(o.b)("inlineCode",{parentName:"p"},"delta")," type that tracks if a document has been deleted. Thus ",Object(o.b)("inlineCode",{parentName:"p"},"delete")," mutations only mark documents with ",Object(o.b)("inlineCode",{parentName:"p"},"_deleted: true")," instead of actually removing them."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE"),": ",Object(o.b)("inlineCode",{parentName:"p"},"Soft Deletes")," strategy can only get you the latest version of changed documents ignoring any in-between states that may have transpired between ",Object(o.b)("inlineCode",{parentName:"p"},"lastSync")," and now.")),Object(o.b)("h3",{id:"modify-the-template-to-support-data-synchronization"},"Modify the template to support Data Synchronization"),Object(o.b)("p",null,"In the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:""}),Object(o.b)("inlineCode",{parentName:"a"},"src/index.ts"))," file of the template, use  ",Object(o.b)("inlineCode",{parentName:"p"},"DataSyncPlugin")," and compliant data sources in ",Object(o.b)("inlineCode",{parentName:"p"},"buildGraphbackAPI"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { createDataSyncMongoDbProvider, createDataSyncCRUDService, DataSyncPlugin } from '@graphback/datasync'\n\n\nconst { typeDefs, resolvers, contextCreator } = buildGraphbackAPI(modelDefs, {\n    dataProviderCreator: createDataSyncMongoDbProvider(db),\n    serviceCreator: createDataSyncCRUDService({ pubSub: new PubSub() }),\n    plugins: [\n        new DataSyncPlugin()\n    ]\n});\n")),Object(o.b)("p",null,"The data sources provided by ",Object(o.b)("inlineCode",{parentName:"p"},"@graphback/datasync")," ensure that the documents are only marked with ",Object(o.b)("inlineCode",{parentName:"p"},"_deleted: true")," instead of being removed from the database, meaning that a compatible client can issue a ",Object(o.b)("inlineCode",{parentName:"p"},"sync")," query to be get info about this deletion."),Object(o.b)("h2",{id:"issuing-deltasync-queries-from-client"},"Issuing Delta/Sync queries from client"),Object(o.b)("p",null,"As an example consider the usecase when your application has stayed offline for a while. You can then use the ",Object(o.b)("inlineCode",{parentName:"p"},"syncX")," query to get only the changed documents rather than having to refetch all of the documents."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'query {\n  syncComments(lastSync: "1590679886048") {\n      id\n      text\n      description\n      createdAt\n      updatedAt\n      _deleted\n  }\n}\n')),Object(o.b)("p",null,"As an example response you might get:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "syncComments": {\n      "items": [\n        {\n          "id": "5ee0a1da7f1f39313744185a",\n          "text": "First!",\n          "description": null,\n          "createdAt": "1591779802551",\n          "updatedAt": "1591852693075",\n          "_deleted": true\n        },\n        {\n          "id": "5ee0a67345beff3862220be4",\n          "text": "Second!",\n          "description": null,\n          "createdAt": "1591780979988",\n          "updatedAt": "1591780979988",\n          "_deleted": false\n        }\n      ],\n      "lastSync": "1591852700920"\n    }\n  }\n}\n')),Object(o.b)("p",null,"The response is a list of the latest versions of the changed  documents along with a ",Object(o.b)("inlineCode",{parentName:"p"},"_deleted")," flag that is set to ",Object(o.b)("inlineCode",{parentName:"p"},"true")," if the document has been deleted since ",Object(o.b)("inlineCode",{parentName:"p"},"lastSync")," and ",Object(o.b)("inlineCode",{parentName:"p"},"false")," otherwise. The response also contains a ",Object(o.b)("inlineCode",{parentName:"p"},"lastSync")," timestamp which can be used in the next ",Object(o.b)("inlineCode",{parentName:"p"},"syncX")," query."),Object(o.b)("p",null,'In the example response, we get that the "First!" comment has been deleted, while a new comment "Second!" has been created.'),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"NOTE"),": There is no support for querying relationships through a delta query, all relationship fields are removed when constructing a delta Type.")),Object(o.b)("p",null,"Taking an example model definition with a ",Object(o.b)("inlineCode",{parentName:"p"},"oneToMany")," relationship from the ",Object(o.b)("inlineCode",{parentName:"p"},"Note")," type to the ",Object(o.b)("inlineCode",{parentName:"p"},"Comment")," type:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),'""" @model """\ntype Note {\n  id: ID!\n  title: String!\n  """\n  @oneToMany field: \'note\'\n  """\n  comments: [Comment]!\n}\n\n""" \n@model\n@versioned\n@delta \n"""\ntype Comment {\n  id: ID!\n  text: String\n}\n')),Object(o.b)("p",null,"Since the ",Object(o.b)("inlineCode",{parentName:"p"},"Comment")," type has a ",Object(o.b)("inlineCode",{parentName:"p"},"@delta")," annotation, Graphback will construct a ",Object(o.b)("inlineCode",{parentName:"p"},"CommentDelta")," type as follows:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-graphql"}),"type CommentDelta {\n  id: ID!\n  text: String\n  description: String\n  createdAt: String\n  updatedAt: String\n  _deleted: Boolean\n}\n")),Object(o.b)("p",null,"Note that there are is no relationship field in the ",Object(o.b)("inlineCode",{parentName:"p"},"CommentDelta")," type."))}s.isMDXComponent=!0},221:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),s=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},p=function(e){var t=s(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),b=r,f=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return n?a.a.createElement(f,c({ref:t},u,{components:n})):a.a.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},222:function(e,t,n){"use strict";e.exports=n(223)},223:function(e,t,n){"use strict";var r=n(224),a="function"==typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,i=a?Symbol.for("react.portal"):60106,c=a?Symbol.for("react.fragment"):60107,l=a?Symbol.for("react.strict_mode"):60108,u=a?Symbol.for("react.profiler"):60114,s=a?Symbol.for("react.provider"):60109,p=a?Symbol.for("react.context"):60110,d=a?Symbol.for("react.forward_ref"):60112,b=a?Symbol.for("react.suspense"):60113,f=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var O={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function j(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||O}function v(){}function S(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||O}j.prototype.isReactComponent={},j.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},j.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=j.prototype;var C=S.prototype=new v;C.constructor=S,r(C,j.prototype),C.isPureReactComponent=!0;var w={current:null},N=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function D(e,t,n){var r,a={},i=null,c=null;if(null!=t)for(r in void 0!==t.ref&&(c=t.ref),void 0!==t.key&&(i=""+t.key),t)N.call(t,r)&&!k.hasOwnProperty(r)&&(a[r]=t[r]);var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){for(var u=Array(l),s=0;s<l;s++)u[s]=arguments[s+2];a.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===a[r]&&(a[r]=l[r]);return{$$typeof:o,type:e,key:i,ref:c,props:a,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var P=/\/+/g,_=[];function q(e,t,n,r){if(_.length){var a=_.pop();return a.result=e,a.keyPrefix=t,a.func=n,a.context=r,a.count=0,a}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function E(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>_.length&&_.push(e)}function T(e,t,n){return null==e?0:function e(t,n,r,a){var c=typeof t;"undefined"!==c&&"boolean"!==c||(t=null);var l=!1;if(null===t)l=!0;else switch(c){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case i:l=!0}}if(l)return r(a,t,""===n?"."+A(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var u=0;u<t.length;u++){var s=n+A(c=t[u],u);l+=e(c,s,r,a)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=y&&t[y]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),u=0;!(c=t.next()).done;)l+=e(c=c.value,s=n+A(c,u++),r,a);else if("object"===c)throw r=""+t,Error(h(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return l}(e,"",t,n)}function A(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function R(e,t){e.func.call(e.context,t,e.count++)}function $(e,t,n){var r=e.result,a=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?I(e,r,n,(function(e){return e})):null!=e&&(x(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,a+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+n)),r.push(e))}function I(e,t,n,r,a){var o="";null!=n&&(o=(""+n).replace(P,"$&/")+"/"),T(e,$,t=q(t,o,r,a)),E(t)}var M={current:null};function z(){var e=M.current;if(null===e)throw Error(h(321));return e}var L={ReactCurrentDispatcher:M,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return I(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;T(e,R,t=q(null,null,t,n)),E(t)},count:function(e){return T(e,(function(){return null}),null)},toArray:function(e){var t=[];return I(e,t,null,(function(e){return e})),t},only:function(e){if(!x(e))throw Error(h(143));return e}},t.Component=j,t.Fragment=c,t.Profiler=u,t.PureComponent=S,t.StrictMode=l,t.Suspense=b,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L,t.cloneElement=function(e,t,n){if(null==e)throw Error(h(267,e));var a=r({},e.props),i=e.key,c=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(c=t.ref,l=w.current),void 0!==t.key&&(i=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)N.call(t,s)&&!k.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){u=Array(s);for(var p=0;p<s;p++)u[p]=arguments[p+2];a.children=u}return{$$typeof:o,type:e.type,key:i,ref:c,props:a,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:p,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=D,t.createFactory=function(e){var t=D.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return z().useCallback(e,t)},t.useContext=function(e,t){return z().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return z().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return z().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return z().useLayoutEffect(e,t)},t.useMemo=function(e,t){return z().useMemo(e,t)},t.useReducer=function(e,t,n){return z().useReducer(e,t,n)},t.useRef=function(e){return z().useRef(e)},t.useState=function(e){return z().useState(e)},t.version="16.13.1"},224:function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function i(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(e,t){for(var n,c,l=i(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))a.call(n,s)&&(l[s]=n[s]);if(r){c=r(n);for(var p=0;p<c.length;p++)o.call(n,c[p])&&(l[c[p]]=n[c[p]])}}return l}}}]);