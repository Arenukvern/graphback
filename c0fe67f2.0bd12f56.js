(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{188:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return b}));var n=a(2),r=(a(0),a(231));const o={title:"CLI commands",id:"commands"},c={id:"version-0.9.x/commands",isDocsHomePage:!1,title:"CLI commands",description:"Commands",source:"@site/versioned_docs/version-0.9.x/commands.md",permalink:"/docs/0.9.x/commands",editUrl:"https://github.com/aerogear/graphback/edit/master/website/versioned_docs/version-0.9.x/commands.md",version:"0.9.x",sidebar:"version-0.9.x/docs",previous:{title:"OpenAPI migrations",permalink:"/docs/0.9.x/openapi"},next:{title:"Releases",permalink:"/docs/0.9.x/releases"},latestVersionMainDocPermalink:"/docs/gettingstarted"},i=[{value:"Commands",id:"commands",children:[{value:"Init",id:"init",children:[]},{value:"Generate",id:"generate",children:[]},{value:"DB",id:"db",children:[]}]},{value:"Update Database",id:"update-database",children:[{value:"Config",id:"config",children:[]}]},{value:"OpenAPI",id:"openapi",children:[]}],l={rightToc:i};function b({components:e,...t}){return Object(r.b)("wrapper",Object(n.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"commands"},"Commands"),Object(r.b)("p",null,"CLI offers help prompt.\nExecute ",Object(r.b)("inlineCode",{parentName:"p"},"graphback")," in your shell for more information"),Object(r.b)("h3",{id:"init"},"Init"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback init <project-name>\n")),Object(r.b)("p",null,"  The command will guide you through a series of questions - choosing a template, bootstrapping model - and setup your project for you."),Object(r.b)("p",null,"  ",Object(r.b)("img",Object(n.a)({parentName:"p"},{src:"/img/init.gif",alt:null}))),Object(r.b)("p",null,"  You can also provide the template name as argument which will skip the template selection part."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback init <project-name> [template-name]\n")),Object(r.b)("h3",{id:"generate"},"Generate"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback generate\n")),Object(r.b)("p",null,"  Generate command will generate schema and resolvers for your GraphQL server based on your data model."),Object(r.b)("h3",{id:"db"},"DB"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback db\n")),Object(r.b)("p",null,"  Create databases resources based on your data model. Currently supports PostgreSQL and sqlite3."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note")," - ",Object(r.b)("em",{parentName:"p"},"Running ",Object(r.b)("inlineCode",{parentName:"em"},"graphback db")," drops your database and recreates it with tables and relationships."))),Object(r.b)("h2",{id:"update-database"},"Update Database"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback update-db\n")),Object(r.b)("p",null,"Updates your database schema based on your data model. Currently supported change types are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"TYPE_ADDED")," - Adding a new GraphQL type to your model will create an associated database table."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"FIELD_ADDED")," - Adding a field to an existing model will create a new column in your database table.")),Object(r.b)("h3",{id:"config"},"Config"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback config\n")),Object(r.b)("p",null,"  Create configuration in existing project to support Graphback resolver and schema generation."),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("strong",{parentName:"p"},"Note")," When creating configuration please review if locations created for ",Object(r.b)("inlineCode",{parentName:"p"},"files")," integration match your project folder structure")),Object(r.b)("h2",{id:"openapi"},"OpenAPI"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"graphback openapi \n")),Object(r.b)("p",null," Generate GraphQL schema and resolvers based on OpenAPI spec"))}b.isMDXComponent=!0},231:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(a),d=n,m=s["".concat(c,".").concat(d)]||s[d]||u[d]||o;return a?r.a.createElement(m,i(i({ref:t},b),{},{components:a})):r.a.createElement(m,i({ref:t},b))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var b=2;b<o;b++)c[b]=a[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);